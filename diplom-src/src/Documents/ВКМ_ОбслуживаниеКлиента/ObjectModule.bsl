
#Область ОбработчикиСобытий

 Процедура ОбработкаПроведения()
   
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВКМ_ОбслуживаниеКлиента.Договор КАК Договор,
	               |	ДоговорыКонтрагентов.Наименование КАК Наименование,
	               |	ДоговорыКонтрагентов.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы
	               |ПОМЕСТИТЬ ВТ_ДанныеДоговора
	               |ИЗ
	               |	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |		ПО ВКМ_ОбслуживаниеКлиента.Договор = ДоговорыКонтрагентов.Ссылка
	               |			И ВКМ_ОбслуживаниеКлиента.Клиент = ДоговорыКонтрагентов.Владелец
	               |ГДЕ
	               |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	               |	И ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот МЕЖДУ ДоговорыКонтрагентов.ВКМ_ДатаНачала И ДоговорыКонтрагентов.ВКМ_ДатаОкончания
	               |	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.ВКМ_АбонентскоеОбслуживание)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ФактическиПотраченоЧасов) КАК ФактическиПотраченоЧасов,
	               |	СУММА(ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.ЧасыКОплатеКлиенту) КАК ЧасыКОплатеКлиенту
	               |ПОМЕСТИТЬ ВТ_ДанныеДоговораТЧ
	               |ИЗ
	               |	Документ.ВКМ_ОбслуживаниеКлиента.ВыполненныеРаботы КАК ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы
	               |ГДЕ
	               |	ВКМ_ОбслуживаниеКлиентаВыполненныеРаботы.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВКМ_УсловияОплатыСотрудников.ПроцентОтРабот, 0) КАК ПроцентОтРабот,
	               |	ВКМ_ОбслуживаниеКлиента.Специалист КАК Специалист
	               |ПОМЕСТИТЬ ВТ_ПроцентПоСотруднику
	               |ИЗ
	               |	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВКМ_УсловияОплатыСотрудников КАК ВКМ_УсловияОплатыСотрудников
	               |		ПО ВКМ_ОбслуживаниеКлиента.Специалист = ВКМ_УсловияОплатыСотрудников.Сотрудник
	               |ГДЕ
	               |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ДанныеДоговора.ВКМ_СтоимостьЧасаРаботы КАК ВКМ_СтоимостьЧасаРаботы,
	               |	ВТ_ПроцентПоСотруднику.ПроцентОтРабот КАК ПроцентОтРабот,
	               |	ВТ_ДанныеДоговораТЧ.ФактическиПотраченоЧасов КАК ФактическиПотраченоЧасов,
	               |	ВТ_ДанныеДоговораТЧ.ЧасыКОплатеКлиенту КАК ЧасыКОплатеКлиенту
	               |ИЗ
	               |	ВТ_ДанныеДоговора КАК ВТ_ДанныеДоговора,
	               |	ВТ_ДанныеДоговораТЧ КАК ВТ_ДанныеДоговораТЧ,
	               |	ВТ_ПроцентПоСотруднику КАК ВТ_ПроцентПоСотруднику";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Договор не относится к обслуживанию или период оказания услуг не верен");
	Иначе
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СуммаКОплате = Выборка.ВКМ_СтоимостьЧасаРаботы * Выборка.ЧасыКОплатеКлиенту; 
			
			//ВыполненныеСотрудникомРаботы
			Движение = Движения.ВКМ_ВыполненныеСотрудникомРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.СуммаКОплате = Выборка.ЧасыКОплатеКлиенту * Выборка.ВКМ_СтоимостьЧасаРаботы * Выборка.ПроцентОтРабот / 100;
			Движение.Сотрудник = Специалист;
			Движение.ЧасовКОплате = Выборка.ФактическиПотраченоЧасов;
       		
			//Регистр ВыполненныеРаботыКлиенту
			Движение = Движения.ВКМ_ВыполненныеКлиентуРаботы.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Клиент = Клиент;
			Движение.Договор = Договор;
			Движение.СуммаКОплате = СуммаКОплате;
			Движение.КоличествоЧасов = Выборка.ЧасыКОплатеКлиенту;
       	КонецЦикла;
	КонецЕсли;  
	
	Движения.ВКМ_ВыполненныеКлиентуРаботы.Записывать = Истина;
	Движения.ВКМ_ВыполненныеСотрудникомРаботы.Записывать = Истина;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Добавление в справочник сообщения об изменении при изменении даты или специалиста
	Если ДополнительныеСвойства.Свойство("СтараяДатаРабот",) <> Ложь 
		И ДополнительныеСвойства.Свойство("СтараяДатаРабот",) <> ДатаПроведенияРабот Тогда
		ОписаниеИзмененияДаты();  
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("СтарыйСпециалист",) <> Ложь 
		И ДополнительныеСвойства.Свойство("СтарыйСпециалист",) <> Специалист Тогда
		ОписаниеИзмененияСпециалиста();  
	КонецЕсли; 

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//Если документ записывается впервые, то добавить в справочник сообщение
	Если ЭтоНовый() Тогда
		Текст = СтрШаблон("Создан документ от %1, специалист %2, выполнить работы %3", Дата, Специалист, ДатаПроведенияРабот);
		СпрНовУвед = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
		СпрНовУвед.ТекстСообщения = Текст;
		СпрНовУвед.Записать();
	КонецЕсли;
	
	//Проверка на измененную дату и специалиста запросом      
	Если Не ЭтоНовый() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
	   "ВЫБРАТЬ
	   |	ВКМ_ОбслуживаниеКлиента.ДатаПроведенияРабот КАК СтараяДатаРабот,
	   |	ВКМ_ОбслуживаниеКлиента.Специалист КАК СтарыйСпециалист
	   |ИЗ
	   |	Документ.ВКМ_ОбслуживаниеКлиента КАК ВКМ_ОбслуживаниеКлиента
	   |ГДЕ
	   |	ВКМ_ОбслуживаниеКлиента.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ДополнительныеСвойства.Вставить("СтараяДатаРабот",Выборка.СтараяДатаРабот); 
			ДополнительныеСвойства.Вставить("СтарыйСпециалист",Выборка.СтарыйСпециалист);	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныепроцедурыИФункции

Процедура ОписаниеИзмененияСпециалиста() 
	
	Текст = СтрШаблон("Изменен специалист на %1, по документу №%2, от %3", Специалист, Номер, Дата);
	СпрНовУвед = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
	СпрНовУвед.ТекстСообщения = Текст;
	СпрНовУвед.Записать();
	
КонецПроцедуры

Процедура ОписаниеИзмененияДаты() 
	
	Текст = СтрШаблон("Изменена дата проведения работ на %1, по документу № %2, от %3", ДатаПроведенияРабот, Номер, Дата);
	СпрНовУвед = Справочники.ВКМ_УведомленияТГБоту.СоздатьЭлемент();
	СпрНовУвед.ТекстСообщения = Текст;
	СпрНовУвед.Записать();
	
КонецПроцедуры

#КонецОбласти
